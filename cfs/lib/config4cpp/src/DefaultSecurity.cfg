#-----------------------------------------------------------------------
# Default security checks for Config4*
# ------------------------------------
#
# allow_patterns is a list of wildcarded command lines that are allowed
# to be executed (if the command resides in a directory listed in
# trusted_directories).
#
# deny_patterns is a list of wildcarded command lines that are
# disallowed.
#
# The wildcarded command-lines can contain "*", which denotes zero or
# more characters.
#
# trusted_directories is a list of directories in which the commands
# listed in allow_patterns must be found.
#-----------------------------------------------------------------------


@if (osType() == "unix") {
	#--------
	# Allow only a few commands that might be useful.
	#--------
	allow_patterns = [
		"curl *",
		"hostname",
		"uname",
		"uname *",
		"ifconfig"
	];

	#--------
	# Disallow `...` (nested commands) and piped commands since we
	# have no idea what they might contain.
	#--------
	deny_patterns = ["*`*", "*|*", "*>*"];
	trusted_directories = ["/bin", "/usr/bin", "/usr/local/bin",
				"/sbin", "/usr/sbin"];
} @elseIf (osType() == "windows") {
	#--------
	# Cygwin (or some other collection of UNIX-like tools) might
	# be installed on a Windows machine so the security
	# configuration is written accordingly.
	# The main difference from the UNIX settings is that
	# "deny_patterns" forbids the use of both UNIX and Windows-style
	# environment variables, that is, $NAME and %NAME%.
	#--------
	allow_patterns = [
		"curl *",
		"hostname",
		"uname",
		"uname *",
		"ipconfig"
	];
	deny_patterns = ["*`*", "*|*", "*>*"];
	trusted_directories = [getenv("SYSTEMROOT") + "\system32"];
} @else {
	#--------
	# If we don't know what operating system we are running on then
	# don't trust anything.
	#--------
	allow_patterns = [];
	deny_patterns = ["*"];
	trusted_directories = [];
};
