//----------------------------------------------------------------------
// WARNING: This file was generated by config2cpp. Do not edit.
//
// Description: a class providing access to an embedded
//              configuration string.
//----------------------------------------------------------------------
#ifndef FallbackConfiguration_h
#define FallbackConfiguration_h

#include <config4cpp/Configuration.h>


class FallbackConfiguration
{
public:
	//--------
	// Constructor and destructor. Ideally these would be private 
	// but they have to be public so we can initialize the singleton.
	//--------
	FallbackConfiguration();
	~FallbackConfiguration();

	//--------
	// Get the configuration string from the singleton object
	//--------
	static const char * getString()
	{
		return s_singleton.m_str.c_str();
	}

	//--------
	// Get the configuration's schema
	//--------
	static void getSchema(const char **& schema, int & schemaSize)
	{
		schema = s_singleton.m_schema;
		schemaSize = 8;
	}
	static const char ** getSchema() // null terminated array
	{
		return s_singleton.m_schema;
	}

private:
	//--------
	// Variables
	//--------
	CONFIG4CPP_NAMESPACE::StringBuffer m_str;
	const char *                       m_schema[9];
	static FallbackConfiguration s_singleton;

	//--------
	// The following are not implemented
	//--------
	FallbackConfiguration & operator=(const FallbackConfiguration &);
	FallbackConfiguration(const FallbackConfiguration &);
};


#endif
