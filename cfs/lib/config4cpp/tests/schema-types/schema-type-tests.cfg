testSchema = [
	"exception = string", # description of expected exception message
	"a_scope = scope",

	"string_value = string",
	"string_fixed_length   = string[3, 3]",
	"string_limited_length = string[1, 3]",

	"boolean_value = boolean",

	"int_value = int",
	"int_value_limited = int[1, 3]",

	"float_value = float",
	"float_value_limited = float[1.0, 3.0]",

	"durationMS_value = durationMilliseconds",
	"durationMS_value_limited1 = durationMilliseconds"
							+ "[%"999 milliseconds%", %"1.001 seconds%"]",
	"durationMS_value_limited2 = durationMilliseconds"
							+ "[%"2 seconds%", %"infinite%"]",
	"durationMS_value_limited3 = durationMilliseconds"
							+ "[%"infinite%", %"infinite%"]",

	"durationS_value = durationSeconds",
	"durationS_value_limited1 = durationSeconds"
							+ "[%"59 seconds%", %"61 seconds%"]",
	"durationS_value_limited2 = durationSeconds"
							+ "[%"2 seconds%", %"infinite%"]",
	"durationS_value_limited3 = durationSeconds"
							+ "[%"infinite%", %"infinite%"]",

	"enum_value_colour = enum[red, green, blue]",

	"memorySizeBytes_value = memorySizeBytes",
	"memorySizeBytes_value_limited = memorySizeBytes[%"1023 bytes%", %"1025 bytes%"]",

	"memorySizeKB_value = memorySizeKB",
	"memorySizeKB_value_limited = memorySizeKB[%"1023 KB%", %"1025 KB%"]",

	"memorySizeMB_value = memorySizeMB",
	"memorySizeMB_value_limited = memorySizeMB[%"1023 MB%", %"1025 MB%"]",

	"int_with_units_value = int_with_units[X, YY, ZZZ]",
	"float_with_units_value = float_with_units[X, YY, ZZZ]",
	"units_with_int_value = units_with_int[X, YY, ZZZ]",
	"units_with_float_value = units_with_float[X, YY, ZZZ]",

	"@typedef logLevel = int[0,3]",
	"@typedef listLogLevel = list[logLevel]",

	"typedef_logLevel_value = logLevel",
	"typedef_listLogLevel_value = listLogLevel",

	"list_int_value = list[int]",
	"list_logLevel_value = list[logLevel]",

	"tuple_value = tuple[int, x, int, y, boolean, ok]",
	"table_value = table[int, x, int, y, boolean, ok]",

];

good {
	#--------
	# scope
	#--------
	uid-scope { a_scope { } }

	#--------
	# boolean
	#--------
	uid-scope { boolean_value = "true"; }
	uid-scope { boolean_value = "false"; }

	#--------
	# string
	#--------
	uid-scope { string_value = "hello, world"; }
	uid-scope { string_fixed_length = "123"; }
	uid-scope { string_limited_length = "1"; }
	uid-scope { string_limited_length = "12"; }
	uid-scope { string_limited_length = "123"; }

	#--------
	# int
	#--------
	uid-scope { int_value = "42"; }
	uid-scope { int_value_limited = "1"; }
	uid-scope { int_value_limited = "2"; }
	uid-scope { int_value_limited = "3"; }

	#--------
	# float
	#--------
	uid-scope { float_value = "42.0"; }
	uid-scope { float_value_limited = "1"; }
	uid-scope { float_value_limited = "1.0"; }
	uid-scope { float_value_limited = "2.0"; }
	uid-scope { float_value_limited = "3.0"; }

	#--------
	# durationMilliseconds
	#--------
	uid-scope { durationMS_value = "0 milliseconds"; }
	uid-scope { durationMS_value = "10 milliseconds"; }
	uid-scope { durationMS_value = "10.5 milliseconds"; }
	uid-scope { durationMS_value = "10.5 seconds"; }
	uid-scope { durationMS_value = "10.5 minutes"; }
	uid-scope { durationMS_value = "10.5 hours"; }
	uid-scope { durationMS_value = "10.5 days"; }
	uid-scope { durationMS_value = "10.5 weeks"; }
	uid-scope { durationMS_value = "1 millisecond"; }
	uid-scope { durationMS_value = "1 second"; }
	uid-scope { durationMS_value = "1 minute"; }
	uid-scope { durationMS_value = "1 hour"; }
	uid-scope { durationMS_value = "1 day"; }
	uid-scope { durationMS_value = "1 week"; }
	uid-scope { durationMS_value = "infinite"; }

	uid-scope { durationMS_value_limited1 = "999 milliseconds"; }
	uid-scope { durationMS_value_limited1 = "1000 milliseconds"; }
	uid-scope { durationMS_value_limited1 = "1001 milliseconds"; }
	uid-scope { durationMS_value_limited1 = "1.001 seconds"; }

	uid-scope { durationMS_value_limited2 = "2 seconds"; }
	uid-scope { durationMS_value_limited2 = "1 minute"; }
	uid-scope { durationMS_value_limited2 = "infinite"; }

	uid-scope { durationMS_value_limited3 = "infinite"; }

	#--------
	# durationSeconds
	#--------
	uid-scope { durationS_value = "0 seconds"; }
	uid-scope { durationS_value = "10.5 seconds"; }
	uid-scope { durationS_value = "10.5 minutes"; }
	uid-scope { durationS_value = "10.5 hours"; }
	uid-scope { durationS_value = "10.5 days"; }
	uid-scope { durationS_value = "10.5 weeks"; }
	uid-scope { durationS_value = "1 second"; }
	uid-scope { durationS_value = "1 minute"; }
	uid-scope { durationS_value = "1 hour"; }
	uid-scope { durationS_value = "1 day"; }
	uid-scope { durationS_value = "1 week"; }
	uid-scope { durationS_value = "infinite"; }

	uid-scope { durationS_value_limited1 = "59 seconds"; }
	uid-scope { durationS_value_limited1 = "60 seconds"; }
	uid-scope { durationS_value_limited1 = "61 seconds"; }
	uid-scope { durationS_value_limited1 = "1 minute"; }

	uid-scope { durationS_value_limited2 = "2 seconds"; }
	uid-scope { durationS_value_limited2 = "1 minute"; }
	uid-scope { durationS_value_limited2 = "infinite"; }

	uid-scope { durationS_value_limited3 = "infinite"; }

	#--------
	# enum
	#--------
	uid-scope { enum_value_colour = "red"; }
	uid-scope { enum_value_colour = "green"; }
	uid-scope { enum_value_colour = "blue"; }

	#--------
	# memorySizeBytes
	#--------
	uid-scope { memorySizeBytes_value = "0bytes"; }
	uid-scope { memorySizeBytes_value = "42 bytes"; }
	uid-scope { memorySizeBytes_value = "10.5 KB"; }
	uid-scope { memorySizeBytes_value = "10.5 MB"; }
	uid-scope { memorySizeBytes_value = "1.5 GB"; }

	uid-scope { memorySizeBytes_value_limited = "1023 bytes"; }
	uid-scope { memorySizeBytes_value_limited = "1024 bytes"; }
	uid-scope { memorySizeBytes_value_limited = "1025 bytes"; }
	uid-scope { memorySizeBytes_value_limited = "1 KB"; }

	#--------
	# memorySizeKB
	#--------
	uid-scope { memorySizeKB_value = "0KB"; }
	uid-scope { memorySizeKB_value = "10.5 KB"; }
	uid-scope { memorySizeKB_value = "10.5 MB"; }
	uid-scope { memorySizeKB_value = "1.5 GB"; }
	uid-scope { memorySizeKB_value = "1.5 TB"; }

	uid-scope { memorySizeKB_value_limited = "1023 KB"; }
	uid-scope { memorySizeKB_value_limited = "1024 KB"; }
	uid-scope { memorySizeKB_value_limited = "1025 KB"; }
	uid-scope { memorySizeKB_value_limited = "1 MB"; }

	#--------
	# memorySizeMB
	#--------
	uid-scope { memorySizeMB_value = "0MB"; }
	uid-scope { memorySizeMB_value = "10.5 MB"; }
	uid-scope { memorySizeMB_value = "10.5 MB"; }
	uid-scope { memorySizeMB_value = "1.5 GB"; }
	uid-scope { memorySizeMB_value = "1.5 TB"; }

	uid-scope { memorySizeMB_value_limited = "1023 MB"; }
	uid-scope { memorySizeMB_value_limited = "1024 MB"; }
	uid-scope { memorySizeMB_value_limited = "1025 MB"; }
	uid-scope { memorySizeMB_value_limited = "1 GB"; }

	#--------
	# int_with_units
	#--------
	uid-scope { int_with_units_value = "1X"; }
	uid-scope { int_with_units_value = "2 YY"; }
	uid-scope { int_with_units_value = "3 ZZZ"; }

	#--------
	# float_with_units
	#--------
	uid-scope { float_with_units_value = "1X"; }
	uid-scope { float_with_units_value = "1.0X"; }
	uid-scope { float_with_units_value = "2 YY"; }
	uid-scope { float_with_units_value = "3.5 ZZZ"; }

	#--------
	# units_with_int
	#--------
	uid-scope { units_with_int_value = "X1"; }
	uid-scope { units_with_int_value = "YY 2"; }
	uid-scope { units_with_int_value = "ZZZ 3"; }

	#--------
	# units_with_float
	#--------
	uid-scope { units_with_float_value = "X1"; }
	uid-scope { units_with_float_value = "X1.0"; }
	uid-scope { units_with_float_value = "YY 2"; }
	uid-scope { units_with_float_value = "ZZZ 3.5"; }

	#--------
	# @typedef
	#--------
	uid-scope { typedef_logLevel_value = "2"; }
	uid-scope { typedef_listLogLevel_value = ["2"]; }

	#--------
	# list
	#--------
	uid-scope { list_int_value = []; }
	uid-scope { list_int_value = ["-1", "0", "1024"]; }
	uid-scope { list_logLevel_value = ["0", "1", "2", "3"]; }

	#--------
	# tuple
	#--------
	uid-scope { tuple_value = ["2", "5", "true"]; }

	#--------
	# table
	#--------
	uid-scope { table_value = []; }
	uid-scope {
		table_value = ["2",  "5", "true",
	                   "42", "0", "false"];
	}

}

bad {
	#--------
	# scope
	#--------
	uid-scope {
		a_scope = "a string";
		exception = "* is a string instead of a scope";
	}
	uid-scope {
		a_scope = ["a", "list of", "strings"];
		exception = "* is a list instead of a scope";
	}

	#--------
	# string
	#--------
	uid-scope {
		string_value = [""];
		exception = "* is a list instead of a string";
	}
	uid-scope {
		string_fixed_length = "12";
		exception = "* its length is outside the permitted range [3, 3]";
	}
	uid-scope {
		string_fixed_length = "1234";
		exception = "* its length is outside the permitted range [3, 3]";
	}
	uid-scope {
		string_limited_length = "";
		exception = "* its length is outside the permitted range [1, 3]";
	}
	uid-scope {
		string_limited_length = "1234";
		exception = "* its length is outside the permitted range [1, 3]";
	}

	#--------
	# boolean
	#--------
	uid-scope {
		boolean_value = [""];
		exception = "* is a list instead of a string";
	}
	uid-scope {
		boolean_value = "";
		exception = "* the value should be one of: 'false', 'true'";
	}
	uid-scope {
		boolean_value = "hello, world";
		exception = "* the value should be one of: 'false', 'true'";
	}

	#--------
	# int
	#--------
	uid-scope {
		int_value = [""];
		exception = "* is a list instead of a string";
	}
	uid-scope {
		int_value = "hello";
		exception = "* bad int value ('hello') *";
	}
	uid-scope {
		int_value = "42foo";
		exception = "* bad int value ('42foo') *";
	}
	uid-scope {
		int_value = "42.0";
		exception = "* bad int value ('42.0') *";
	}
	uid-scope {
		int_value_limited = "0";
		exception = "* the value is outside the permitted range [1, 3]";
	}
	uid-scope {
		int_value_limited = "4";
		exception = "* the value is outside the permitted range [1, 3]";
	}

	#--------
	# float
	#--------
	uid-scope {
		float_value = [""];
		exception = "* is a list instead of a string";
	}
	uid-scope {
		float_value = "hello";
		exception = "* bad float value ('hello') *";
	}
	uid-scope {
		float_value = "42.0foo";
		exception = "* bad float value ('42.0foo') *";
	}
	uid-scope {
		float_value_limited = "0.0";
		exception = "* the value is outside the permitted range [1.0, 3.0]";
	}
	uid-scope {
		float_value_limited = "4.0";
		exception = "* the value is outside the permitted range [1.0, 3.0]";
	}

	#--------
	# durationMilliseconds
	#--------
	uid-scope {
		durationMS_value = ["10 milliseconds"];
		exception = "* is a list instead of a string";
	}
	uid-scope {
		durationMS_value = "hello, world";
		exception = "* the value should be in the format *";
	}
	uid-scope {
		durationMS_value = "1.0";
		exception = "* the value should be in the format *";
	}

	uid-scope {
		durationMS_value_limited1 = "998 milliseconds";
		exception = "* the value is outside the permitted range "
					+ "[999 milliseconds, 1.001 seconds]";
	}
	uid-scope {
		durationMS_value_limited1 = "1002 milliseconds";
		exception = "* the value is outside the permitted range "
					+ "[999 milliseconds, 1.001 seconds]";
	}
	uid-scope {
		durationMS_value_limited1 = "1.003 seconds";
		exception = "* the value is outside the permitted range "
					+ "[999 milliseconds, 1.001 seconds]";
	}
	uid-scope {
		durationMS_value_limited1 = "1 minute";
		exception = "* the value is outside the permitted range "
					+ "[999 milliseconds, 1.001 seconds]";
	}
	uid-scope {
		durationMS_value_limited1 = "infinite";
		exception = "* the value is outside the permitted range "
					+ "[999 milliseconds, 1.001 seconds]";
	}

	uid-scope {
		durationMS_value_limited2 = "0 second";
		exception = "* the value is outside the permitted range "
					+ "[2 seconds, infinite]";
	}
	uid-scope {
		durationMS_value_limited2 = "500 milliseconds";
		exception = "* the value is outside the permitted range "
					+ "[2 seconds, infinite]";
	}
	uid-scope {
		durationMS_value_limited2 = "1.5 seconds";
		exception = "* the value is outside the permitted range "
					+ "[2 seconds, infinite]";
	}

	#--------
	# durationSeconds
	#--------
	uid-scope {
		durationS_value = ["10 seconds"];
		exception = "* is a list instead of a string";
	}
	uid-scope {
		durationS_value = "hello, world";
		exception = "* the value should be in the format *";
	}
	uid-scope {
		durationS_value = "1.0";
		exception = "* the value should be in the format *";
	}
	uid-scope {
		durationS_value = "100 milliseconds";
		exception = "* the value should be in the format *";
	}

	uid-scope {
		durationS_value_limited1 = "58 seconds";
		exception = "* the value is outside the permitted range "
					+ "[59 seconds, 61 seconds]";
	}
	uid-scope {
		durationS_value_limited1 = "62 seconds";
		exception = "* the value is outside the permitted range "
					+ "[59 seconds, 61 seconds]";
	}
	uid-scope {
		durationS_value_limited1 = "2 minutes";
		exception = "* the value is outside the permitted range "
					+ "[59 seconds, 61 seconds]";
	}
	uid-scope {
		durationS_value_limited1 = "infinite";
		exception = "* the value is outside the permitted range "
					+ "[59 seconds, 61 seconds]";
	}

	uid-scope {
		durationS_value_limited2 = "0 seconds";
		exception = "* the value is outside the permitted range "
					+ "[2 seconds, infinite]";
	}
	uid-scope {
		durationS_value_limited2 = "1 second";
		exception = "* the value is outside the permitted range "
					+ "[2 seconds, infinite]";
	}

	#--------
	# enum
	#--------
	uid-scope {
		enum_value_colour = "hello";
		exception = "* the value should be one of: *";
	}
	uid-scope {
		enum_value_colour = ["red"];
		exception = "* is a list instead of a string";
	}

	#--------
	# memorySizeBytes
	#--------
	uid-scope {
		memorySizeBytes_value = ["42 bytes"];
		exception = "* is a list instead of a string";
	}
	uid-scope {
		memorySizeBytes_value = "42";
		exception = "* the value should be in the format *";
	}
	uid-scope {
		memorySizeBytes_value = "hello, world";
		exception = "* the value should be in the format *";
	}
	uid-scope {
		memorySizeBytes_value = "1 TB";
		exception = "* the value should be in the format *";
	}
	uid-scope {
		memorySizeBytes_value = "1 PB";
		exception = "* the value should be in the format *";
	}

	uid-scope {
		memorySizeBytes_value_limited = "1022 bytes";
		exception = "* the value is outside the permitted range "
					+ "[1023 bytes, 1025 bytes]";
	}
	uid-scope {
		memorySizeBytes_value_limited = "1026 bytes";
		exception = "* the value is outside the permitted range "
					+ "[1023 bytes, 1025 bytes]";
	}
	uid-scope {
		memorySizeBytes_value_limited = "2 KB";
		exception = "* the value is outside the permitted range "
					+ "[1023 bytes, 1025 bytes]";
	}

	#--------
	# memorySizeKB
	#--------
	uid-scope {
		memorySizeBytes_value = ["42 KB"];
		exception = "* is a list instead of a string";
	}
	uid-scope {
		memorySizeKB_value = "42";
		exception = "* the value should be in the format *";
	}
	uid-scope {
		memorySizeKB_value = "hello, world";
		exception = "* the value should be in the format *";
	}
	uid-scope {
		memorySizeKB_value = "10 bytes";
		exception = "* the value should be in the format *";
	}
	uid-scope {
		memorySizeKB_value = "1024 bytes";
		exception = "* the value should be in the format *";
	}
	uid-scope {
		memorySizeKB_value = "1 PB";
		exception = "* bad memorySizeKB value ('1 PB') * the value "
					+ "should be in the format *";
	}

	uid-scope {
		memorySizeKB_value_limited = "1022 KB";
		exception = "* the value is outside the permitted range "
					+ "[1023 KB, 1025 KB]";
	}
	uid-scope {
		memorySizeKB_value_limited = "1026 KB";
		exception = "* the value is outside the permitted range "
					+ "[1023 KB, 1025 KB]";
	}
	uid-scope {
		memorySizeKB_value_limited = "2 MB";
		exception = "* the value is outside the permitted range "
					+ "[1023 KB, 1025 KB]";
	}

	#--------
	# memorySizeMB
	#--------
	uid-scope {
		memorySizeMB_value = ["42 MB"];
		exception = "* is a list instead of a string";
	}
	uid-scope {
		memorySizeMB_value = "42";
		exception = "* the value should be in the format *";
	}
	uid-scope {
		memorySizeMB_value = "hello, world";
		exception = "* the value should be in the format *";
	}
	uid-scope {
		memorySizeMB_value = "10 bytes";
		exception = "* the value should be in the format *";
	}
	uid-scope {
		memorySizeMB_value = "1024 bytes";
		exception = "* the value should be in the format *";
	}
	uid-scope {
		memorySizeMB_value = "1 KB";
		exception = "* the value should be in the format *";
	}

	uid-scope {
		memorySizeMB_value_limited = "1022 MB";
		exception = "* the value is outside the permitted range "
					+ "[1023 MB, 1025 MB]";
	}
	uid-scope {
		memorySizeMB_value_limited = "1026 MB";
		exception = "* the value is outside the permitted range "
					+ "[1023 MB, 1025 MB]";
	}
	uid-scope {
		memorySizeMB_value_limited = "2 GB";
		exception = "* the value is outside the permitted range "
					+ "[1023 MB, 1025 MB]";
	}

	#--------
	# int_with_units
	#--------
	uid-scope {
		int_with_units_value = ["2 X"];
		exception = "* is a list instead of a string";
	}
	uid-scope {
		int_with_units_value = "2";
		exception = "* the value should be in the format *";
	}
	uid-scope {
		int_with_units_value = "2 foo";
		exception = "* the value should be in the format *";
	}
	uid-scope {
		int_with_units_value = "X 2";
		exception = "* the value should be in the format *";
	}
	uid-scope {
		int_with_units_value = "2.0 X";
		exception = "* the value should be in the format *";
	}

	#--------
	# float_with_units
	#--------
	uid-scope {
		int_with_units_value = ["2 X"];
		exception = "* is a list instead of a string";
	}
	uid-scope {
		int_with_units_value = "2";
		exception = "* the value should be in the format *";
	}
	uid-scope {
		int_with_units_value = "2 foo";
		exception = "* the value should be in the format *";
	}
	uid-scope {
		int_with_units_value = "X 2";
		exception = "* the value should be in the format *";
	}

	#--------
	# units_with_int
	#--------
	uid-scope {
		units_with_int_value = ["X 2"];
		exception = "* is a list instead of a string";
	}
	uid-scope {
		units_with_int_value = "2";
		exception = "* the value should be in the format *";
	}
	uid-scope {
		units_with_int_value = "foo 2";
		exception = "* the value should be in the format *";
	}
	uid-scope {
		units_with_int_value = "2 X";
		exception = "* the value should be in the format *";
	}
	uid-scope {
		units_with_int_value = "X 2.0";
		exception = "* the value should be in the format *";
	}

	#--------
	# units_with_float
	#--------
	uid-scope {
		units_with_float_value = ["X 2"];
		exception = "* is a list instead of a string";
	}
	uid-scope {
		units_with_float_value = "2";
		exception = "* the value should be in the format *";
	}
	uid-scope {
		units_with_float_value = "2 X";
		exception = "* the value should be in the format *";
	}
	uid-scope {
		units_with_float_value = "foo 2";
		exception = "* the value should be in the format *";
	}
	uid-scope {
		units_with_float_value = "foo 2.0";
		exception = "* the value should be in the format *";
	}

	#--------
	# @typedef
	#--------
	uid-scope {
		typedef_logLevel_value = "-1";
		exception = "* the value is outside the permitted range [0, 3]";
	}
	uid-scope {
		typedef_logLevel_value = "4";
		exception = "* the value is outside the permitted range [0, 3]";
	}
	uid-scope {
		typedef_listLogLevel_value = ["-1"];
		exception = "* the value is outside the permitted range [0, 3]";
	}
	uid-scope {
		typedef_listLogLevel_value = "2";
		exception = "* is a string instead of a list";
	}
	uid-scope {
		typedef_listLogLevel_value { }
		exception = "* is a scope instead of a list";
	}

	#--------
	# list
	#--------
	uid-scope {
		list_int_value = ["hello", "world"];
		exception = "* bad int value ('hello') *";
	}
	uid-scope {
		list_int_value = ["1.0"];
		exception = "* bad int value ('1.0') *";
	}
	uid-scope {
		list_int_value = "1";
		exception = "* is a string instead of a list";
	}
	uid-scope {
		list_int_value { }
		exception = "* is a scope instead of a list";
	}
	uid-scope {
		list_logLevel_value = ["hello, world"];
		exception = "* bad logLevel value ('hello, world') *";
	}
	uid-scope {
		list_logLevel_value = ["-1"];
		exception = "* the value is outside the permitted range [0, 3]";
	}
	uid-scope {
		list_logLevel_value = ["4"];
		exception = "* the value is outside the permitted range [0, 3]";
	}

	#--------
	# tuple
	#--------
	uid-scope {
		tuple_value = ["2"];
		exception = "* there should be 3 entries in the * tuple; *";
	}
	uid-scope {
		tuple_value = ["2", "5"];
		exception = "* there should be 3 entries in the * tuple; *";
	}
	uid-scope {
		tuple_value = ["2", "5", "true", "hello, world"];
		exception = "* there should be 3 entries in the * tuple; *";
	}
	uid-scope {
		tuple_value = ["2.0", "5", "true"];
		exception = "* bad int value ('2.0') *";
	}
	uid-scope {
		tuple_value = ["2", "5.0", "true"];
		exception = "* bad int value ('5.0') *";
	}
	uid-scope {
		tuple_value = ["2", "hello, world", "true"];
		exception = "* bad int value ('hello, world') *";
	}
	uid-scope {
		tuple_value = ["2", "5", "hello, world"];
		exception = "* bad boolean value ('hello, world') * the value "
					+ "should be one of: *";
	}

	#--------
	# table
	#--------
	uid-scope {
		table_value = "hello, world";
		exception = "* is a string instead of a list";
	}
	uid-scope {
		table_value { }
		exception = "* is a scope instead of a list";
	}
	uid-scope {
		table_value = ["2",  "5", "hello, world"];
		exception = "* bad boolean value ('hello, world') for the 'ok' "
					+ "column in row 1 *";
	}
	uid-scope {
		table_value = ["2",  "5.0", "true"];
		exception = "* bad int value ('5.0') for the 'y' column in row 1 *";
	}
	uid-scope {
		table_value = ["2",  "5"];
		exception = "* the number of entries in the '*' table "
					+ "is not a multiple of 3";
	}
	uid-scope {
		table_value = ["2"];
		exception = "* the number of entries in the '*' table "
					+ "is not a multiple of 3";
	}

}
